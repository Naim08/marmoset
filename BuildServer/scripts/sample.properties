
#  Marmoset: a student project snapshot, submission, testing and code review
#  system developed by the Univ. of Maryland, College Park
#
#  Developed as part of Jaime Spacco's Ph.D. thesis work, continuing effort led
#  by William Pugh. See http://marmoset.cs.umd.edu/
#
#  Copyright 2005 - 2011, Univ. of Maryland
#
#  Licensed under the Apache License, Version 2.0 (the "License"); you may not
#  use this file except in compliance with the License. You may obtain a copy of
#  the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#  WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#  License for the specific language governing permissions and limitations under
#  the License.

# A sample configuration file for the BuildServer 

# Configuration stuff.

# you will probably need to set this to the absolute path to your
# JDK installation, like "/usr/local/jdk"
java.home=$JAVA_HOME
# if you plan on using findubgs to check student submissions,
# you should set the absolute path to your findbugs installation here
findbugs.home=$FINDBUGS_HOME

# these are paths (respectively) to the location where this build server
# will build and test student submissions, and to the top-level directory
# for all build server instances running on this host
build.server.home=/home/buildserver/BuildServer/run
build.server.root=/home/buildserver/BuildServer
hostname=HOSTNAME

# Java static analysis tools: comma-separated list of names of
# classes implementing the ISubmissionInspectionStep interface.
# If no package is given explicitly, the "edu.umd.cs.buildServer"
# package is assumed.
tools.java=FindBugsRunner,PMDRunner,CodeFeaturesRunner

#
# List the primary keys of the courses that are supported by
# this buildserver.  You can get the PKs from phpMyAdmin or 
# snoop them from various HTTP GET requests that set the coursePK
#

#
# CMSC212 (C code only)
#
#supported.courses=3

#
# CMSC131/CMSC132 (Java code only)
#
#supported.courses=1,2

# How to contact the SubmitServer, and authenticate
# as the BuildServer.
submit.server.protocol=https
submit.server.host=<SET_SUBMIT_SERVER_HOSTNAME_HERE>
submit.server.port=443

# this should be the same password that you set for the
# "buildserver.password" context-param value in your sumbmit server's
# web.xml config file
submit.server.password=<SET_PASSWORD_HERE>

# Paths to SubmitServer servlets used by the BuildServer.
submit.server.requestproject.path=/submitServer/buildServer/RequestSubmission
submit.server.getprojectjar.path=/submitServer/buildServer/GetTestSetup
submit.server.reporttestresults.path=/submitServer/buildServer/ReportTestOutcomes
submit.server.handlebuildserverlogmessage.path=/submitServer/buildServer/HandleBuildServerLogMessage

# Directories.  These must all be distinct.
build.directory=${build.server.home}/build
test.files.directory=${build.server.home}/testfiles
jar.cache.directory=${build.server.home}/jarcache
#log.directory=${build.server.home}/log
log.directory=console

# Debug properties.
debug.verbose=true
debug.donotloop=true
debug.security=false
